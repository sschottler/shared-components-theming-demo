{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\n\nexport enum ThemeOptions {\n  Default,\n  Alternate\n}\n\nexport interface Theme {\n  name: ThemeOptions\n  primaryColor?: string\n  foregroundColor?: string\n}\n\nexport const defaultTheme: Theme = {\n  name: ThemeOptions.Default,\n  primaryColor: 'blue',\n  foregroundColor: 'white'\n}\n\n// export frequently used alternate theme values so\n// consuming web apps that share a similar style don't\n// have to duplicate values:\nexport const alternateTheme: Theme = {\n  ...defaultTheme,\n  name: ThemeOptions.Alternate,\n  primaryColor: 'green'\n}\n\nexport const SharedComponentsThemeProvider = (props: any) => {\n  const mergedTheme = {\n    ...defaultTheme,\n    ...props.theme\n  }\n\n  return <ThemeProvider theme={mergedTheme}>{props.children}</ThemeProvider>\n}\n\n/**\n * this helper makes it so consuming app isn't REQUIRED to wrap exported\n * components in ThemeProvider if it just wants default theme:\n */\nconst themeValue = (prop: keyof Theme) => {\n  return (props: any) => props.theme[prop] || defaultTheme[prop]\n}\n\nexport const Button = styled.button`\n  /* the expression below REQUIRES consuming web app to wrap in ThemeProvider to set theme: */\n  /* background: ${({ theme }) => theme.primaryColor}; */\n  /* this helper allows consuming web app to bypass wrapping component in ThemeProvider: */\n  background: ${themeValue('primaryColor')};\n  border: none;\n  border-radius: ${({ theme }) => {\n    // can also have conditional css applied based on name of theme\n    // (alternatively, just add a theme.button.borderRadius field):\n    if (theme?.name === ThemeOptions.Alternate) {\n      return '10px'\n    }\n    return '0'\n  }};\n  color: ${themeValue('foregroundColor')};\n  padding: 10px 20px;\n  font-size: 14px;\n  font-weight: bold;\n`\n"],"names":["ThemeOptions","defaultTheme","name","Default","primaryColor","foregroundColor","alternateTheme","Alternate","SharedComponentsThemeProvider","props","mergedTheme","theme","React","ThemeProvider","children","themeValue","prop","Button","styled","button"],"mappings":";;;;;IAGYA;;AAAZ,WAAYA;AACVA,EAAAA,yCAAA,YAAA;AACAA,EAAAA,2CAAA,cAAA;AACD,CAHD,EAAYA,YAAY,KAAZA,YAAY,KAAA,CAAxB;;MAWaC,YAAY,GAAU;AACjCC,EAAAA,IAAI,EAAEF,YAAY,CAACG,OADc;AAEjCC,EAAAA,YAAY,EAAE,MAFmB;AAGjCC,EAAAA,eAAe,EAAE;AAHgB;MAStBC,cAAc,GAAU,EACnC,GAAGL,YADgC;AAEnCC,EAAAA,IAAI,EAAEF,YAAY,CAACO,SAFgB;AAGnCH,EAAAA,YAAY,EAAE;AAHqB;MAMxBI,6BAA6B,GAAIC,KAAD;AAC3C,QAAMC,WAAW,GAAG,EAClB,GAAGT,YADe;AAElB,OAAGQ,KAAK,CAACE;AAFS,GAApB;AAKA,SAAOC,aAAA,CAACC,aAAD;AAAeF,IAAAA,KAAK,EAAED;GAAtB,EAAoCD,KAAK,CAACK,QAA1C,CAAP;AACD;;AAMD,MAAMC,UAAU,GAAIC,IAAD;AACjB,SAAQP,KAAD,IAAgBA,KAAK,CAACE,KAAN,CAAYK,IAAZ,KAAqBf,YAAY,CAACe,IAAD,CAAxD;AACD,CAFD;;MAIaC,MAAM,GAAGC,MAAM,CAACC,MAAV;;mBAAA;;gBAAA;;mBAAA;WAAA;;;;CAAA,GAEA,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACP,YAFrB,EAIHW,UAAU,CAAC,cAAD,CAJP,EAMA,CAAC;AAAEJ,EAAAA;AAAF,CAAD;AAGf,MAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAET,IAAP,MAAgBF,YAAY,CAACO,SAAjC,EAA4C;AAC1C,WAAO,MAAP;AACD;;AACD,SAAO,GAAP;AACD,CAbgB,EAcRQ,UAAU,CAAC,iBAAD,CAdF;;;;"}